name: Build Wheels

on:
  push:
    tags: "*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  macos:
    name: macOS Wheels (universal2)
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist -m minijinja-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  linux:
    name: Linux Wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [i686, x86_64, armv7l, aarch64]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: dtolnay/rust-toolchain@stable
      - name: Wipe Config
        run: |
          rm .cargo/config.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m minijinja-py/Cargo.toml --interpreter "3.9"
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  windows:
    name: Windows Wheels
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86] 

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m minijinja-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  sdist:
    name: Source Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist -m minijinja-py/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  publish-pypi:
    name: Publish to pypi.org
    runs-on: ubuntu-latest
    needs:
      - sdist
      - windows
      - linux
      - macos
    env:
      MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    if: ${{ !github.event.pull_request }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing minijinja-*

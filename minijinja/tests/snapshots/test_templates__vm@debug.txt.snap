---
source: minijinja/tests/test_templates.rs
expression: "&rendered"
input_file: minijinja/tests/inputs/debug.txt

---
State {
    ctx: Context {
        stack: [
            {
                "upper": 1,
            },
            {
                "f": minijinja::functions::builtins::range,
            },
            {
                "x": 0,
            },
        ],
    },
    name: "debug.txt",
    current_block: None,
    auto_escape: None,
    env: Environment {
        globals: {
            "debug": minijinja::functions::builtins::debug,
            "dict": minijinja::functions::builtins::dict,
            "range": minijinja::functions::builtins::range,
        },
        tests: [
            "defined",
            "endingwith",
            "even",
            "mapping",
            "number",
            "odd",
            "sequence",
            "startingwith",
            "string",
            "undefined",
        ],
        filters: [
            "count",
            "d",
            "default",
            "dictsort",
            "e",
            "escape",
            "join",
            "length",
            "lower",
            "replace",
            "reverse",
            "safe",
            "trim",
            "upper",
        ],
        templates: [
            "debug.txt",
            "simple_include.txt",
            "simple_layout.txt",
            "super_with_html.html",
        ],
    },
}

=====

Template {
    name: "debug.txt",
    instructions: [
        00000 | LOAD_CONST (value "f")  [line 1],
        00001 | LOOKUP (var "range"),
        00002 | BUILD_MAP (1 pairs),
        00003 | PUSH_CONTEXT,
        00004 | LOOKUP (var "upper"),
        00005 | BUILD_LIST (1 items),
        00006 | CALL_FUNCTION (name "f"),
        00007 | PUSH_LOOP (loop var: true),
        00008 | ITERATE (exit to 0000e),
        00009 | STORE_LOCAL (var "x"),
        0000a | BUILD_LIST (0 items),
        0000b | CALL_FUNCTION (name "debug"),
        0000c | EMIT,
        0000d | JUMP (to 00008),
        0000e | POP_FRAME,
        0000f | POP_FRAME,
        00010 | EMIT_RAW (string "\n"),
    ],
    blocks: {},
    initial_auto_escape: None,
}

---
source: minijinja/tests/test_parser.rs
description: "{{ foo|bar(1, 2)|baz }}\n{{ foo|bar(1, 2,) }}\n{{ foo|bar(1, 2, a=1) }}\n{{ foo|bar(1, 2, a=1,) }}"
input_file: minijinja/tests/parser-inputs/filter.txt
---
Ok(
    Template {
        children: [
            EmitExpr {
                expr: Filter {
                    name: "baz",
                    expr: Some(
                        Filter {
                            name: "bar",
                            expr: Some(
                                Var {
                                    id: "foo",
                                } @ 1:3-1:6,
                            ),
                            args: [
                                Const {
                                    value: 1,
                                } @ 1:11-1:12,
                                Const {
                                    value: 2,
                                } @ 1:14-1:15,
                            ],
                        } @ 1:7-1:16,
                    ),
                    args: [],
                } @ 1:17-1:20,
            } @ 1:0-1:20,
            EmitRaw {
                raw: "\n",
            } @ 1:23-2:0,
            EmitExpr {
                expr: Filter {
                    name: "bar",
                    expr: Some(
                        Var {
                            id: "foo",
                        } @ 2:3-2:6,
                    ),
                    args: [
                        Const {
                            value: 1,
                        } @ 2:11-2:12,
                        Const {
                            value: 2,
                        } @ 2:14-2:15,
                    ],
                } @ 2:7-2:17,
            } @ 2:0-2:17,
            EmitRaw {
                raw: "\n",
            } @ 2:20-3:0,
            EmitExpr {
                expr: Filter {
                    name: "bar",
                    expr: Some(
                        Var {
                            id: "foo",
                        } @ 3:3-3:6,
                    ),
                    args: [
                        Const {
                            value: 1,
                        } @ 3:11-3:12,
                        Const {
                            value: 2,
                        } @ 3:14-3:15,
                        Map {
                            keys: [
                                Const {
                                    value: "a",
                                } @ 3:17-3:18,
                            ],
                            values: [
                                Const {
                                    value: 1,
                                } @ 3:19-3:20,
                            ],
                        } @ 3:17-3:20,
                    ],
                } @ 3:7-3:21,
            } @ 3:0-3:21,
            EmitRaw {
                raw: "\n",
            } @ 3:24-4:0,
            EmitExpr {
                expr: Filter {
                    name: "bar",
                    expr: Some(
                        Var {
                            id: "foo",
                        } @ 4:3-4:6,
                    ),
                    args: [
                        Const {
                            value: 1,
                        } @ 4:11-4:12,
                        Const {
                            value: 2,
                        } @ 4:14-4:15,
                        Map {
                            keys: [
                                Const {
                                    value: "a",
                                } @ 4:17-4:18,
                            ],
                            values: [
                                Const {
                                    value: 1,
                                } @ 4:19-4:20,
                            ],
                        } @ 4:17-4:21,
                    ],
                } @ 4:7-4:22,
            } @ 4:0-4:22,
        ],
    } @ 0:0-4:25,
)

---
source: minijinja/tests/test_templates.rs
expression: "&rendered"
input_file: minijinja/tests/inputs/loop_var.txt

---

  a (1 of 4)
    first=true
    last=false
    revindex=4
    revindex0=3
    cycle=odd

  b (2 of 4)
    first=false
    last=false
    revindex=3
    revindex0=2
    cycle=even

  c (3 of 4)
    first=false
    last=false
    revindex=2
    revindex0=1
    cycle=odd

  d (4 of 4)
    first=false
    last=true
    revindex=1
    revindex0=0
    cycle=even


=====

Template {
    name: "loop_var.txt",
    instructions: [
        00000 | LOOKUP (var "seq")   [loop_var.txt:1],
        00001 | PUSH_LOOP (loop var: true)   [loop_var.txt:1],
        00002 | ITERATE (exit to 00028)   [loop_var.txt:1],
        00003 | STORE_LOCAL (var "item")   [loop_var.txt:1],
        00004 | EMIT_RAW (string "\n  ")   [loop_var.txt:1],
        00005 | LOOKUP (var "item")   [loop_var.txt:2],
        00006 | EMIT   [loop_var.txt:2],
        00007 | EMIT_RAW (string " (")   [loop_var.txt:2],
        00008 | LOOKUP (var "loop")   [loop_var.txt:2],
        00009 | GETATTR (key "index")   [loop_var.txt:2],
        0000a | EMIT   [loop_var.txt:2],
        0000b | EMIT_RAW (string " of ")   [loop_var.txt:2],
        0000c | LOOKUP (var "loop")   [loop_var.txt:2],
        0000d | GETATTR (key "length")   [loop_var.txt:2],
        0000e | EMIT   [loop_var.txt:2],
        0000f | EMIT_RAW (string ")\n    first=")   [loop_var.txt:2],
        00010 | LOOKUP (var "loop")   [loop_var.txt:3],
        00011 | GETATTR (key "first")   [loop_var.txt:3],
        00012 | EMIT   [loop_var.txt:3],
        00013 | EMIT_RAW (string "\n    last=")   [loop_var.txt:3],
        00014 | LOOKUP (var "loop")   [loop_var.txt:4],
        00015 | GETATTR (key "last")   [loop_var.txt:4],
        00016 | EMIT   [loop_var.txt:4],
        00017 | EMIT_RAW (string "\n    revindex=")   [loop_var.txt:4],
        00018 | LOOKUP (var "loop")   [loop_var.txt:5],
        00019 | GETATTR (key "revindex")   [loop_var.txt:5],
        0001a | EMIT   [loop_var.txt:5],
        0001b | EMIT_RAW (string "\n    revindex0=")   [loop_var.txt:5],
        0001c | LOOKUP (var "loop")   [loop_var.txt:6],
        0001d | GETATTR (key "revindex0")   [loop_var.txt:6],
        0001e | EMIT   [loop_var.txt:6],
        0001f | EMIT_RAW (string "\n    cycle=")   [loop_var.txt:6],
        00020 | LOOKUP (var "loop")   [loop_var.txt:7],
        00021 | LOAD_CONST (value "odd")   [loop_var.txt:7],
        00022 | LOAD_CONST (value "even")   [loop_var.txt:7],
        00023 | BUILD_LIST (2 items)   [loop_var.txt:7],
        00024 | CALL_METHOD (name "cycle")   [loop_var.txt:7],
        00025 | EMIT   [loop_var.txt:7],
        00026 | EMIT_RAW (string "\n")   [loop_var.txt:7],
        00027 | JUMP (to 00002)   [loop_var.txt:7],
        00028 | POP_FRAME   [loop_var.txt:7],
        00029 | EMIT_RAW (string "\n")   [loop_var.txt:8],
    ],
    blocks: {},
    initial_auto_escape: None,
}
